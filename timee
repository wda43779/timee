#!/usr/bin/env python3
from pathlib import Path
import json
import time
import sys
import os
import asyncio

# load data
data_path = Path.home() / '.timeedata'
data = {}
if (data_path.is_file()):
    with open(data_path) as json_data:
        data = json.load(json_data)
elif (data_path.exists()):
    print("Please remove " + str(data_path))
    sys.exit(-1)

if 'version' not in data:
    data['version'] = 1
    data['record'] = {}
    data['started'] = {}

def save_data():
    with open(data_path, 'w') as outfile:
        json.dump(data, outfile, indent=4)


def period2str(period):
   return '%02d:%02d:%02d' % ( period // 3600, period % 3600 // 60, period % 60)

def print_usage():
    print('''Usage: timee
  | timee <name>
  | timee start <name>
  | timee stop <name>
  | timee clear <name>
''')

def print_status():
    print('Started:')
    for k,v in data['started'].items():
        print('%s: Elapsed %s' % (k, period2str(int(time.time() - v))))
    print()
    print('Recorded:')
    for k,v in data['record'].items():
        print('%s: Elapsed %s' % (k, period2str(v)))
    print('\n^C to exit')

async def print_status_loop():
    while True:
        os.system('clear')
        print_status()
        await asyncio.sleep(1)

if len(sys.argv) == 1:
    try:
        asyncio.run(print_status_loop())
    except KeyboardInterrupt:
        print('\nGood bye')
else:
    if sys.argv[1] == 'start':
        if len(sys.argv) != 3:
            print_usage()
            exit(-1)
        data['started'][sys.argv[2]] = int(time.time())
    elif sys.argv[1] == 'stop': 
        if len(sys.argv) != 3:
            print_usage()
            exit(-1)
        if sys.argv[2] in data['started']:
            start_time = data['started'][sys.argv[2]]
            end_time = int(time.time())
            record = 0
            if sys.argv[2] in data['record']:
                record = data['record'][sys.argv[2]]
            print('Elapsed %s' % period2str(int(end_time - start_time)))
            record = record + int(end_time - start_time)
            print('Total elapsed %s' % period2str(record))
            data['started'].pop(sys.argv[2])
            data['record'][sys.argv[2]] = record
    elif sys.argv[1] == 'edit':
        os.system('vi ' + str(data_path))
        exit(0)
    elif sys.argv[1] == 'clear':
        if len(sys.argv) != 3:
            print_usage()
            exit(-1)
        data['started'].pop(sys.argv[2], None)
        data['record'].pop(sys.argv[2], None)
    else:
        record_name = sys.argv[1]
        record = 0
        if record_name in data['record']:
            record = data['record'][record_name]
        start_time = time.time()

        os.system('timee start ' + record_name)
        os.system('timee')
        os.system('timee stop ' + record_name)
        exit(0)

save_data()
